# To learn more about .editorconfig see https://aka.ms/editorconfigdocs

# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# All files
[*]
indent_style = space
trim_trailing_whitespace = true

# Xml files
[*.xml]
indent_size = 2

# Xml project files
[*.{csproj,fsproj,vbproj,proj}]
indent_size = 2

# Xml config files
[*.{props,targets,config,nuspec}]
indent_size = 2

[*.json]
indent_size = 2

# C# files
[*.cs]

#### Core EditorConfig Options ####
# Indentation and spacing
indent_size = 4
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = false

#### Code style rules - See: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ ####

#### Code style - Language and unnecessary rules ####

# Simplify name
dotnet_diagnostic.IDE0001.severity = suggestion

# Simplify member access
dotnet_diagnostic.IDE0002.severity = suggestion

# this. and Me. preferences
dotnet_style_qualification_for_event = false:warning
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_diagnostic.IDE0003.severity = warning
dotnet_diagnostic.IDE0009.severity = none

# Remove unnecessary cast
dotnet_diagnostic.IDE0004.severity = suggestion

# Remove unnecessary using directives
dotnet_diagnostic.IDE0005.severity = warning

# 'var' preferences
csharp_style_var_for_built_in_types = false:warning
csharp_style_var_when_type_is_apparent = false:suggestion
csharp_style_var_elsewhere = false:warning
dotnet_diagnostic.IDE0007.severity = warning
dotnet_diagnostic.IDE0008.severity = warning

# Add missing cases to switch statement
dotnet_diagnostic.IDE0010.severity = suggestion

# Add braces
csharp_prefer_braces = true:error
dotnet_diagnostic.IDE0011.severity = error

# Use throw expression
csharp_style_throw_expression = true:warning
dotnet_diagnostic.IDE0016.severity = warning

# Use object initializers
dotnet_style_object_initializer = true:warning
dotnet_diagnostic.IDE0017.severity = warning

# Inline variable declaration
csharp_style_inlined_variable_declaration = true:warning
dotnet_diagnostic.IDE0018.severity = warning

# Use pattern matching to avoid 'as' followed by a 'null' check
csharp_style_pattern_matching_over_as_with_null_check = true:warning
dotnet_diagnostic.IDE0019.severity = warning

# Use pattern matching to avoid 'is' check followed by a cast
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
dotnet_diagnostic.IDE0020.severity = warning
dotnet_diagnostic.IDE0038.severity = warning

# Use expression body for constructors
csharp_style_expression_bodied_constructors = false:none
dotnet_diagnostic.IDE0021.severity = none

# Use expression body for methods
csharp_style_expression_bodied_methods = when_on_single_line:none
dotnet_diagnostic.IDE0022.severity = none

# Use expression body for operators
csharp_style_expression_bodied_operators = when_on_single_line:none
dotnet_diagnostic.IDE0023.severity = none
dotnet_diagnostic.IDE0024.severity = none

# Use expression body for properties
csharp_style_expression_bodied_properties = when_on_single_line:suggestion
dotnet_diagnostic.IDE0025.severity = suggestion

# Use expression body for indexers
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion
dotnet_diagnostic.IDE0026.severity = suggestion

# Use expression body for accessors
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion
dotnet_diagnostic.IDE0027.severity = suggestion

# Use collection initializers or expressions
dotnet_style_collection_initializer = true:warning
dotnet_style_prefer_collection_expression = when_types_exactly_match:suggestion
dotnet_diagnostic.IDE0028.severity = suggestion
dotnet_diagnostic.IDE0300.severity = suggestion
dotnet_diagnostic.IDE0301.severity = suggestion
dotnet_diagnostic.IDE0302.severity = suggestion
dotnet_diagnostic.IDE0303.severity = suggestion
dotnet_diagnostic.IDE0304.severity = suggestion
dotnet_diagnostic.IDE0305.severity = suggestion
dotnet_diagnostic.IDE0306.severity = silent

# Null check can be simplified
dotnet_style_coalesce_expression = true:suggestion
dotnet_diagnostic.IDE0029.severity = suggestion
dotnet_diagnostic.IDE0030.severity = suggestion
dotnet_diagnostic.IDE0270.severity = suggestion

# Use null propagation
dotnet_style_null_propagation = true:suggestion
dotnet_diagnostic.IDE0031.severity = suggestion

# Use auto-implemented property
dotnet_style_prefer_auto_properties = true:warning
dotnet_diagnostic.IDE0032.severity = warning

# Use explicitly provided tuple name
dotnet_style_explicit_tuple_names = true:warning
dotnet_diagnostic.IDE0033.severity = warning

# Simplify 'default' expression
csharp_prefer_simple_default_expression = true:warning
dotnet_diagnostic.IDE0034.severity = warning

# Remove unreachable code
dotnet_diagnostic.IDE0035.severity = error

# Order modifiers
csharp_preferred_modifier_order = public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async
dotnet_diagnostic.IDE0036.severity = suggestion

# Use inferred member names
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_diagnostic.IDE0037.severity = suggestion

# Use local function instead of lambda
csharp_style_prefer_local_over_anonymous_function = true:warning
dotnet_diagnostic.IDE0039.severity = warning

# Add accessibility modifiers
dotnet_style_require_accessibility_modifiers = always
dotnet_diagnostic.IDE0040.severity = error

# Use 'is null' check
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_diagnostic.IDE0041.severity = warning

# Deconstruct variable declaration
csharp_style_deconstructed_variable_declaration = true:warning
dotnet_diagnostic.IDE0042.severity = warning

# Add readonly modifier
dotnet_style_readonly_field = true:error
dotnet_diagnostic.IDE0044.severity = error

# Use conditional expression for assignment
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_diagnostic.IDE0045.severity = silent

# Use conditional expression for return
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_diagnostic.IDE0046.severity = silent

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion
dotnet_diagnostic.IDE0047.severity = suggestion
dotnet_diagnostic.IDE0048.severity = suggestion

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning
dotnet_diagnostic.IDE0049.severity = warning

# Convert anonymous type to tuple
dotnet_diagnostic.IDE0050.severity = suggestion

# Remove unused private member
dotnet_diagnostic.IDE0051.severity = error

# Remove unread private member
dotnet_diagnostic.IDE0052.severity = error

# Use expression body for lambdas
csharp_style_expression_bodied_lambdas = true:suggestion
dotnet_diagnostic.IDE0053.severity = suggestion

# Use compound assignment
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_diagnostic.IDE0054.severity = suggestion
dotnet_diagnostic.IDE0074.severity = suggestion

# Use index operator
csharp_style_prefer_index_operator = true:suggestion
dotnet_diagnostic.IDE0056.severity = suggestion

# Use range operator
csharp_style_prefer_range_operator = true:suggestion
dotnet_diagnostic.IDE0057.severity = suggestion

# Remove unnecessary expression value
csharp_style_unused_value_expression_statement_preference = discard_variable:warning
dotnet_diagnostic.IDE0058.severity = warning

# Remove unnecessary value assignment
csharp_style_unused_value_assignment_preference = discard_variable:warning
dotnet_diagnostic.IDE0059.severity = warning

# Remove unused parameter
dotnet_code_quality_unused_parameters = all:warning
dotnet_diagnostic.IDE0060.severity = warning

# Use expression body for local functions
csharp_style_expression_bodied_local_functions = false:suggestion
dotnet_diagnostic.IDE0061.severity = suggestion

# Make local function static
csharp_prefer_static_local_function = true:warning
dotnet_diagnostic.IDE0062.severity = warning

# Use simple 'using' statement
csharp_prefer_simple_using_statement = true:suggestion
dotnet_diagnostic.IDE0063.severity = suggestion

# Make struct fields writable
dotnet_diagnostic.IDE0064.severity = none

# 'using' directive placement
csharp_using_directive_placement = outside_namespace:warning
dotnet_diagnostic.IDE0065.severity = warning

# Use switch expression
csharp_style_prefer_switch_expression = true:warning
dotnet_diagnostic.IDE0066.severity = warning

# Use 'System.HashCode.Combine'
dotnet_diagnostic.IDE0070.severity = warning

# Simplify interpolation
dotnet_style_prefer_simplified_interpolation = true:warning
dotnet_diagnostic.IDE0071.severity = warning

# Add missing cases to switch expression
dotnet_diagnostic.IDE0072.severity = warning

# Require file header
file_header_template = unset
dotnet_diagnostic.IDE0073.severity = none

# Simplify conditional expression
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_diagnostic.IDE0075.severity = suggestion

# Use pattern matching
csharp_style_prefer_pattern_matching = true:warning
dotnet_diagnostic.IDE0078.severity = warning
dotnet_diagnostic.IDE0260.severity = warning

# Remove unnecessary suppression
dotnet_remove_unnecessary_suppression_exclusions = none
dotnet_diagnostic.IDE0079.severity = none

# Remove unnecessary suppression operator
dotnet_diagnostic.IDE0080.severity = suggestion

# Convert typeof to nameof
dotnet_diagnostic.IDE0082.severity = warning

# Use pattern matching (not operator)
csharp_style_prefer_not_pattern = true:warning
dotnet_diagnostic.IDE0083.severity = warning

# Simplify new expression
csharp_style_implicit_object_creation_when_type_is_apparent = true:warning
dotnet_diagnostic.IDE0090.severity = warning

# Remove unnecessary equality operator
dotnet_diagnostic.IDE0100.severity = suggestion

# Remove unnecessary discard
dotnet_diagnostic.IDE0110.severity = warning

# Simplify LINQ expression
dotnet_diagnostic.IDE0120.severity = warning

# Simplify LINQ type check and cast
dotnet_diagnostic.IDE0121.severity = warning

# Namespace does not match folder structure
dotnet_style_namespace_match_folder = true:suggestion
dotnet_diagnostic.IDE0130.severity = suggestion

# Prefer 'null' check over type check
csharp_style_prefer_null_check_over_type_check = true:warning
dotnet_diagnostic.IDE0150.severity = warning

# Namespace declaration preferences
csharp_style_namespace_declarations = file_scoped:warning
dotnet_diagnostic.IDE0160.severity = warning
dotnet_diagnostic.IDE0161.severity = warning

# Simplify property pattern
csharp_style_prefer_extended_property_pattern = true:warning
dotnet_diagnostic.IDE0170.severity = warning

# Use tuple to swap values
csharp_style_prefer_tuple_swap = true:suggestion
dotnet_diagnostic.IDE0180.severity = suggestion

# Remove unnecessary lambda expression
csharp_style_prefer_method_group_conversion = true:warning
dotnet_diagnostic.IDE0200.severity = warning

# Convert to top-level statements
csharp_style_prefer_top_level_statements = false:suggestion
dotnet_diagnostic.IDE0210.severity = suggestion

# Convert to 'Program.Main' style program
dotnet_diagnostic.IDE0211.severity = suggestion

# Add explicit cast in foreach loop
dotnet_style_prefer_foreach_explicit_cast_in_source = when_strongly_typed
dotnet_diagnostic.IDE0220.severity = suggestion

# Use UTF-8 string literal
csharp_style_prefer_utf8_string_literals = true:suggestion
dotnet_diagnostic.IDE0230.severity = suggestion

# Nullable directive is redundant
dotnet_diagnostic.IDE0240.severity = warning

# Nullable directive is unnecessary
dotnet_diagnostic.IDE0241.severity = warning

# Struct can be made 'readonly'
csharp_style_prefer_readonly_struct = true:warning
dotnet_diagnostic.IDE0250.severity = warning

# Member can be made 'readonly'
csharp_style_prefer_readonly_struct_member = true:warning
dotnet_diagnostic.IDE0251.severity = warning

# Use 'nameof'
dotnet_diagnostic.IDE0280.severity = warning

# Use primary constructor
csharp_style_prefer_primary_constructors = true:suggestion
dotnet_diagnostic.IDE0290.severity = suggestion

# Make anonymous function static
csharp_prefer_static_anonymous_function = true:warning
dotnet_diagnostic.IDE0320.severity = warning

# Prefer 'System.Threading.Lock'
csharp_prefer_system_threading_lock = true:warning
dotnet_diagnostic.IDE0330.severity = warning

# Use unbound generic type
csharp_style_prefer_unbound_generic_type_in_nameof = true:suggestion
dotnet_diagnostic.IDE0340.severity = suggestion

# Use implicitly typed lambda
csharp_style_prefer_implicitly_typed_lambda_expression = true:suggestion
dotnet_diagnostic.IDE0350.severity = suggestion

# Use conditional delegate call
csharp_style_conditional_delegate_call = true:warning
dotnet_diagnostic.IDE1005.severity = warning

#### Code style - Miscellaneous rules ####
dotnet_diagnostic.IDE0076.severity = warning
dotnet_diagnostic.IDE0077.severity = warning

#### Code style - Formatting Rules ####
dotnet_diagnostic.IDE0055.severity = suggestion

## .NET formatting options ##
# Using directive options
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

## C# formatting options ##
# New line options
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current
csharp_indent_block_contents = true
csharp_indent_braces = false

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

#### Code style - naming rules ####
# Naming rules
dotnet_naming_rule.interface_should_be_begins_with_i.severity = warning
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_public_field_should_be_begins_with_underscore.severity = warning
dotnet_naming_rule.non_public_field_should_be_begins_with_underscore.symbols = non_public_field
dotnet_naming_rule.non_public_field_should_be_begins_with_underscore.style = begins_with_underscore

dotnet_naming_rule.local_variables_should_be_camelcase.severity = warning
dotnet_naming_rule.local_variables_should_be_camelcase.symbols = local_variables
dotnet_naming_rule.local_variables_should_be_camelcase.style = camel_case

# Symbol groups
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

dotnet_naming_symbols.non_public_field.applicable_kinds = field
dotnet_naming_symbols.non_public_field.applicable_accessibilities = internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_public_field.required_modifiers =

dotnet_naming_symbols.local_variables.applicable_kinds = local
dotnet_naming_symbols.local_variables.applicable_accessibilities = local
dotnet_naming_symbols.local_variables.required_modifiers =

# Naming styles
dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.camel_case.required_prefix =
dotnet_naming_style.camel_case.required_suffix =
dotnet_naming_style.camel_case.word_separator =
dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.begins_with_underscore.required_prefix = _
dotnet_naming_style.begins_with_underscore.required_suffix =
dotnet_naming_style.begins_with_underscore.word_separator =
dotnet_naming_style.begins_with_underscore.capitalization = camel_case

# C# test files
[*Test*.cs]

#### MSTest code analysis - See: https://learn.microsoft.com/en-us/dotnet/core/testing/mstest-analyzers/overview ####

#### MSTest design rules ####
# Public types should be test classes
dotnet_diagnostic.MSTEST0004.severity = warning

# Avoid [ExpectedException]
dotnet_diagnostic.MSTEST0006.severity = warning

# Test method should not be ignored
dotnet_diagnostic.MSTEST0015.severity = warning

# Test class should have test method
dotnet_diagnostic.MSTEST0016.severity = warning

# Prefer TestInitialize methods over constructors
dotnet_diagnostic.MSTEST0019.severity = none

# Prefer constructors over TestInitialize methods
dotnet_diagnostic.MSTEST0020.severity = warning

# Prefer Dispose over TestCleanup methods
dotnet_diagnostic.MSTEST0021.severity = warning

# Prefer TestCleanup over Dispose methods
dotnet_diagnostic.MSTEST0022.severity = none

# Use 'Assert.Fail' instead of an always-failing assert
dotnet_diagnostic.MSTEST0025.severity = warning

# Public method should be test method
dotnet_diagnostic.MSTEST0029.severity = warning

# Do not use shadowing inside test class
dotnet_diagnostic.MSTEST0036.severity = warning

#### MSTest performance rules ####
# Explicitly enable or disable tests parallelization
dotnet_diagnostic.MSTEST0001.severity = warning

#### MSTest usage rules ####
# Test classes should have valid layout
dotnet_diagnostic.MSTEST0002.severity = warning

# Test methods should have valid layout
dotnet_diagnostic.MSTEST0003.severity = error

# Test context property should have valid layout
dotnet_diagnostic.MSTEST0005.severity = warning

# Use test attributes only on test methods
dotnet_diagnostic.MSTEST0007.severity = warning

# TestInitialize method should have valid layout
dotnet_diagnostic.MSTEST0008.severity = warning

# TestCleanup method should have valid layout
dotnet_diagnostic.MSTEST0009.severity = warning

# ClassInitialize method should have valid layout
dotnet_diagnostic.MSTEST0010.severity = warning

# ClassCleanup method should have valid layout
dotnet_diagnostic.MSTEST0011.severity = warning

# AssemblyInitialize method should have valid layout
dotnet_diagnostic.MSTEST0012.severity = warning

# AssemblyCleanup method should have valid layout
dotnet_diagnostic.MSTEST0013.severity = warning

# DataRow should be valid
dotnet_diagnostic.MSTEST0014.severity = warning

# Assertion arguments should be passed in the correct order
dotnet_diagnostic.MSTEST0017.severity = suggestion

# DynamicData should be valid
dotnet_diagnostic.MSTEST0018.severity = warning

# Do not negate boolean assertions
dotnet_diagnostic.MSTEST0023.severity = warning

# Do not store TestContext in a static member
dotnet_diagnostic.MSTEST0024.severity = warning

# Avoid conditional access in assertions
dotnet_diagnostic.MSTEST0026.severity = warning

# Type containing [TestMethod] should be marked with [TestClass]
dotnet_diagnostic.MSTEST0030.severity = warning

# 'System.ComponentModel.DescriptionAttribute' has no effect on test methods
dotnet_diagnostic.MSTEST0031.severity = suggestion

# Review or remove the assertion as its condition is known to be always true
dotnet_diagnostic.MSTEST0032.severity = warning

# Use ClassCleanupBehavior.EndOfClass with the [ClassCleanup]
dotnet_diagnostic.MSTEST0034.severity = warning

# [DeploymentItem] can be specified only on test class or test method
dotnet_diagnostic.MSTEST0035.severity = warning

# Use proper 'Assert' methods
dotnet_diagnostic.MSTEST0037.severity = warning

# Don't use 'Assert.AreSame' or 'Assert.AreNotSame' with value types
dotnet_diagnostic.MSTEST0038.severity = warning

# Use newer 'Assert.Throws' methods
dotnet_diagnostic.MSTEST0039.severity = warning

# Do not assert inside 'async void' contexts
dotnet_diagnostic.MSTEST0040.severity = warning

# Use 'ConditionBaseAttribute' on test classes
dotnet_diagnostic.MSTEST0041.severity = warning

# Avoid duplicated 'DataRow' entries
dotnet_diagnostic.MSTEST0042.severity = warning

# Use retry attribute on test method
dotnet_diagnostic.MSTEST0043.severity = error

#### .NET code refactoring options - See: https://learn.microsoft.com/en-us/visualstudio/ide/reference/code-styles-refactoring-options ####
dotnet_style_operator_placement_when_wrapping = beginning_of_line

#### IDE-only code style rules - See: https://learn.microsoft.com/en-us/visualstudio/ide/reference/json001 ####
# Invalid JSON pattern
dotnet_diagnostic.JSON001.severity = warning

# Probable JSON string detected
dotnet_diagnostic.JSON002.severity = suggestion

# Invalid regex pattern
dotnet_diagnostic.RE0001.severity = warning
